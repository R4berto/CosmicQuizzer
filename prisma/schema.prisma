// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id          String       @id @default(cuid())
  email       String       @unique
  role        Role         @default(USER)
  createdAt   DateTime     @default(now())
  submissions Submission[]
}

model Quiz {
  id          String     @id @default(cuid())
  title       String
  description String?
  questions   Question[]
  createdAt   DateTime   @default(now())
  submissions Submission[]
}

model Question {
  id        String        @id @default(cuid())
  quiz      Quiz          @relation(fields: [quizId], references: [id])
  quizId    String
  text      String
  options   AnswerOption[]
  answerIdx Int           // index of correct option
  submissionAnswers SubmissionAnswer[]
}

model AnswerOption {
  id         String   @id @default(cuid())
  question   Question @relation(fields: [questionId], references: [id])
  questionId String
  text       String
  idx        Int
}

model Submission {
  id        String              @id @default(cuid())
  user      User                @relation(fields: [userId], references: [id])
  userId    String
  quiz      Quiz                @relation(fields: [quizId], references: [id])
  quizId    String
  score     Int
  createdAt DateTime            @default(now())
  answers   SubmissionAnswer[]
}

model SubmissionAnswer {
  id           String     @id @default(cuid())
  submission   Submission  @relation(fields: [submissionId], references: [id])
  submissionId String
  question     Question   @relation(fields: [questionId], references: [id])
  questionId   String
  chosenIdx    Int
}
